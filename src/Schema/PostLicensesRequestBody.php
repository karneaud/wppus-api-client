<?php

declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace Wppus\Client\Schema;

use JsonSerializable;

class PostLicensesRequestBody implements SerializableInterface, JsonSerializable
{
    private $allowedDomains = [];
    private array $fields = ['license_key' => false, 'allowed_domains' => false, 'package_slug' => false, 'license_signature'=> false];

    public function __construct(array $parameters = [])
    {
        if(!empty($parameters)) $this->setParameters($parameters);

        $this->allowedDomains = [$_SERVER['SERVER_NAME'],$_SERVER['HTTP_HOST']];
    }

    public function setParameters(array $params) : self {
       foreach($params as $key => $value)
        {
            $key = ucfirst($key);
            if(method_exists($this, "set$key")) call_user_func([$this, "set$key"], $value);
        }

        return $this;
    }

    public function setLicenseKey(string $value): self
    {
        $this->fields['license_key']  = $value;

        return $this;
    }

    public function setAllowedDomains(string $value): self
    {
        $this->fields['allowed_domains']  = $value;

        return $this;
    }

    public function setLicenseSignature(string $value): self
    {
        $this->fields['license_signature'] = $value;

        return $this;
    }

    public function setPackageSlug(string $value): self
    {
        $this->fields['package_slug']  = $value;

        return $this;
    }

    public function hasAllowedDomains(): bool
    {
        return empty(array_intersect(
            array_map(fn($url) => preg_replace('#^https?://(www\.)?#', '', rtrim($url, '/')),array_filter( $this->fields)),
            array_map(fn($url) => preg_replace('#^https?://(www\.)?#', '', rtrim($url, '/')), $this->allowedDomains)
        ));
    }

    public function hasPackageSlug(): bool
    {
        return $this->optionalPropertyChanged['packageSlug'];
    }

    public function getLicenseKey(): ?string
    {
        return $this->fields['license_key'];
    }

    /**
     * @return string[]|null
     */
    public function getAllowedDomains(): ?array
    {
        return $this->fields['allowed_domains'];
    }

    public function getPackageSlug(): ?string
    {
        return $this->fields['package_slug'];
    }

    public function __toString() {
        return json_encode($this->toArray());
    }

    public function toString() {
        return $this->__toString();
    }

    public function toArray(): array
    {
        $fields = $this->fields;
        if ($this->hasAllowedDomains()) {
            $fields['allowed_domains'] = [$fields['allowed_domains']];
        }
        
        return array_filter($fields);
    }

    public function jsonSerialize(): array
    {
        return $this->toArray();
    }
}
