<?php

declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace Wppus\Client;

use JsonSerializable;
use DoclerLabs\ApiClientException\Factory\ResponseExceptionFactory;
use Pimple\Container;
use Wppus\Client\Request\Mapper\RequestMapper;
use Wppus\Client\Request\Mapper\RequestMapperInterface;
use Wppus\Client\Response\ResponseHandler;
use Wppus\Client\Serializer\BodySerializer;
use Wppus\Client\Serializer\ContentType\JsonContentTypeSerializer;
use Wppus\Client\Serializer\QuerySerializer;
use Wppus\Client\Schema\PostLicensesRequestBody;

class ServiceProvider
{
    public function register(Container $container): void
    {
        $container[BodySerializer::class] = static function (): BodySerializer {
            return (new BodySerializer())->add(new JsonContentTypeSerializer());
        };
        $container[QuerySerializer::class] = static function (): QuerySerializer {
            return new QuerySerializer();
        };
        $container[ResponseHandler::class] = static function () use ($container): ResponseHandler {
            return new ResponseHandler($container[BodySerializer::class], new ResponseExceptionFactory());
        };
        $container[RequestMapperInterface::class] = static function () use ($container): RequestMapperInterface {
            return new RequestMapper($container[BodySerializer::class], $container[QuerySerializer::class]);
        };
        $container[JsonSerializable::class] = static function () : JsonSerializable {
            return new PostLicensesRequestBody();
        };
    }
}
